# Copyright 2023 Ant Group Co., Ltd.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
parameters:
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  linux_ut:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: registry.hub.docker.com/secretflow/ubuntu-base-ci:0.4
    resource_class: large
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    shell: /bin/bash --login -eo pipefail
    steps:
      - checkout
      - restore_cache:
          name: "Restore pip cache"
          key: &pip-cache pip-{{ checksum "python/requirements.txt" }}-{{ checksum "python/dev-requirements.txt" }}
      - run:
          name: "Install python deps"
          command: |
            pwd
            pip install -r python/requirements.txt
            pip install -r python/dev-requirements.txt
      - run:
          name: "unit test"
          command: |
            cd python
            python setup.py build_ext --inplace
            mkdir test-results
            pytest --junitxml=test-results/junit-report.xml
      - save_cache:
          key: *pip-cache
          paths:
            - /usr/local/lib64/python3.8/site-packages
      - store_test_results:
          path: python/test-results

  linux_publish:
    docker:
      - image: registry.hub.docker.com/secretflow/release-ci:0.7
    resource_class: large
    parameters:
      python_ver:
        type: string
    shell: /bin/bash --login -eo pipefail
    steps:
      - checkout
      - run:
          name: "build package and publish"
          command: |
            conda create -n build python=<< parameters.python_ver >> -y
            conda activate build
            cd python
            python3 -m pip install twine auditwheel patchelf

            python3 setup.py bdist_wheel
            
            ls dist/*.whl
            auditwheel repair dist/*.whl --plat manylinux2014_x86_64
            ls wheelhouse/*.whl 
            
            python3 -m twine upload -r pypi -u __token__ -p ${PYPI_TWINE_TOKEN} wheelhouse/*.whl 

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  ut:
    when:
      not: << pipeline.parameters.GHA_Action >>
    jobs:
      - linux_ut
  publish:
    when: << pipeline.parameters.GHA_Action >>
    jobs:
      - linux_publish:
          matrix:
            parameters:
              # python_ver: ["3.8", "3.9", "3.10", "3.11"]
              python_ver: ["3.8"]